---
import "@/styles/globals.css";
import "@fontsource-variable/playpen-sans";
import { ThemeToggle } from "@/components/ThemeToggle";
import { Toaster } from "@/components/ui/toaster";
interface Props {
    mainClasses?: string;
}
const { mainClasses } = Astro.props;
---

<html lang="en" class="w-full group">
    <head>
        <meta charset="utf-8" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="viewport" content="width=device-width" />
        <meta name="generator" content={Astro.generator} />
        <title>Boxnames - the game</title>
    </head>
    <body class="w-full dark:bg-neutral-950">
        <main class:list={["w-full h-screen", mainClasses]}>
            <slot />
            <ThemeToggle client:load />
            <Toaster client:load />
        </main>
    </body>
</html>

<script is:inline>
    const getThemePreference = () => {
        if (
            typeof localStorage !== "undefined" &&
            localStorage.getItem("theme")
        ) {
            return localStorage.getItem("theme");
        }
        return window.matchMedia("(prefers-color-scheme: dark)").matches
            ? "dark"
            : "light";
    };
    const isDark = getThemePreference() === "dark";
    document.documentElement.classList[isDark ? "add" : "remove"]("dark");

    if (typeof localStorage !== "undefined") {
        const observer = new MutationObserver(() => {
            const isDark = document.documentElement.classList.contains("dark");
            localStorage.setItem("theme", isDark ? "dark" : "light");
        });
        observer.observe(document.documentElement, {
            attributes: true,
            attributeFilter: ["class"],
        });
    }
</script>
